module boolean_auto (
    input clk,  // clock
    input rst,  // reset
    input trigger,
    output io_sel[4],
    output io_seg[8]
  ) {
  
  boolean boolean;
  
  .clk(clk){
    .rst(rst){
    fsm state = {IDLE, TEST1, TEST2, TEST3, TEST4, PASS, FAIL};
    multi_seven_seg seg;
    stateCounter sc;
    }
  }
  always {
    boolean.a = 0;
    boolean.b = 0;
    boolean.alufn = 6b0;
    io_seg = 8hff;
    
    // The segments will display "HELO" by default
    seg.values = {4ha, 4hb, 4hc, 4h0};
    
    io_seg = ~seg.seg; // Connect segments to the driver
    io_sel = ~seg.sel; // Connect digit select to the driver
    
    if(trigger == 0){
      state.d = state.IDLE;
  }
    case(state.q){
      state.IDLE: 
        if(trigger == 1){
          state.d = state.TEST1;}
         
      state.TEST1: // test AND
        boolean.a = 16b1110100111010111;
        boolean.b = 16b0001110101101110;
        boolean.alufn = 6h18;
        seg.values = {4ha, 4ha, 4ha, 4h1};  // 1
        // Check if the outputs is expected
        //If it is correct go to the next test case(nest state), if not, go to fail state
        
        if (boolean.out == 16b0000100101000110 && sc.inc_state == 1) {
          state.d = state.TEST2;
        }

        else if (sc.inc_state == 1) {
          state.d = state.FAIL;}
        
      state.TEST2: // test OR
        boolean.a = 16b1110100111010111;
        boolean.b = 16b0001110101101110;
        boolean.alufn = 6h1e;
        seg.values = {4ha, 4ha, 4ha, 4h2};  // 2
        
        if (boolean.out == 16b1111110111111111 && sc.inc_state == 1) {
          state.d = state.TEST3;
        }

        else if (sc.inc_state == 1) {
          state.d = state.FAIL;}
          
      state.TEST3: // test XOR
        boolean.a = 16b1110100111010111;
        boolean.b = 16b0001110101101110;
        boolean.alufn = 6h16;
        seg.values = {4ha, 4ha, 4ha, 4h3};  // 3
        
        if (boolean.out == 16b1111010010111001 && sc.inc_state == 1) {
          state.d = state.TEST4;
        }

        else if (sc.inc_state == 1) {
          state.d = state.FAIL;}
            
      state.TEST4: //test A
        boolean.a = 16b1110100111010111;
        boolean.b = 16b0001110101101110;
        boolean.alufn = 6h1a;
        seg.values = {4ha, 4ha, 4ha, 4h4};  // 4
        
        if (boolean.out == 16b1110100111010111 && sc.inc_state == 1) {
          state.d = state.PASS;
        }

        else if (sc.inc_state == 1) {
          state.d = state.FAIL;}
            
      state.FAIL:
        seg.values = {4hf, 4he, 4hd, 4hd};
        
      state.PASS:
        seg.values = {4hd, 4he, 4hd, 4hd};
      
}
}
}